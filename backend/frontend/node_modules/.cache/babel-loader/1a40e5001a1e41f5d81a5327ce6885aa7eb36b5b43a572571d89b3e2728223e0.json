{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavgoel/My Folder/01_My Programs/WebDev/Learning React/instagram-clone/src/components/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./SignUp.css\";\nimport logo from \"../img/logo.png\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const navigate = useNavigate();\n  const emailregex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const [name, setName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const notifysuccess = msg => toast.success(msg);\n  const notifyerror = error => toast.error(error);\n  const handleclick = async () => {\n    if (!emailregex.test(email)) {\n      notifyerror(\"Please Enter a valid email\");\n      return;\n    }\n    const url = \"http://localhost:2000/signup\";\n    const res = await fetch(url, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        userName,\n        email,\n        password\n      })\n    });\n    const parsed = await res.json();\n    if (parsed.success) {\n      notifysuccess(parsed.msg);\n      navigate(\"/\");\n    } else {\n      notifyerror(parsed.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"signup-logo\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Full Name\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            placeholder: \"Username\",\n            value: userName,\n            onChange: e => {\n              setUserName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"submit-btn\",\n          value: \"Sign Up\",\n          onClick: handleclick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupPara\",\n          children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"signupspan\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"41yhDmqhJbyR4gKnked7BAkvSkM=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","logo","Link","useNavigate","toast","jsxDEV","_jsxDEV","Signup","_s","navigate","emailregex","name","setName","userName","setUserName","email","setEmail","password","setPassword","notifysuccess","msg","success","notifyerror","error","handleclick","test","url","res","fetch","method","headers","body","JSON","stringify","parsed","json","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","onClick","to","style","textDecoration","_c","$RefreshReg$"],"sources":["/Users/anubhavgoel/My Folder/01_My Programs/WebDev/Learning React/instagram-clone/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./SignUp.css\";\nimport logo from \"../img/logo.png\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast} from 'react-toastify';\n\nconst Signup = () => {\n  const navigate=useNavigate();\n\n  const emailregex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  const [name, setName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n    const notifysuccess = (msg) => toast.success(msg);\n    const notifyerror = (error) => toast.error(error);\n\n  const handleclick=async ()=>{\n    if(!emailregex.test(email)){\n      notifyerror(\"Please Enter a valid email\");\n      return;\n    }\n    const url=\"http://localhost:2000/signup\";\n    const res=await fetch(url,{\n      method:\"post\",\n      headers:{\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify({\n        name,userName,email,password\n      })\n    });\n    const parsed=await res.json();\n    if(parsed.success)\n    {\n      notifysuccess(parsed.msg);\n      navigate(\"/\");\n    }\n    else\n    {\n      notifyerror(parsed.error);\n    }\n  }\n  return (\n    <div className=\"signup\">\n      <div className=\"signup-form-container\">\n        <form>\n        <img src={logo} className=\"signup-logo\" alt=\"\"></img>\n        <div className=\"input-div\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Full Name\"\n            value={name}\n            onChange={(e)=>{setName(e.target.value)}}\n          ></input>\n        </div>\n        <div className=\"input-div\">\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"Username\"\n            value={userName}\n            onChange={(e)=>{setUserName(e.target.value)}}\n          ></input>\n        </div>\n        <div className=\"input-div\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e)=>{setEmail(e.target.value)}}\n          ></input>\n        </div>\n        <div className=\"input-div\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e)=>{setPassword(e.target.value)}}\n          ></input>\n        </div>\n        <input type=\"submit\" id=\"submit-btn\" value=\"Sign Up\" onClick={handleclick}></input>\n        <div className=\"signupPara\">\n          Already have an account?\n          <br />\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <span className=\"signupspan\">Login</span>\n          </Link>\n        </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}