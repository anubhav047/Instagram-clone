{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavgoel/My Folder/01_My Programs/WebDev/Learning React/instagram-clone/src/components/Createpost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./NavBar\";\nimport preview from \"../img/preview.png\";\nimport \"./Createpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Createpost = () => {\n  _s();\n  const [image, setimage] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const loadfile = event => {\n    var output = document.getElementById(\"output\");\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n\n    const postdata = async () => {\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", \"instagram-clone\");\n      data.append(\"cloud_name\", \"anubhavcloudinary\");\n      const res = await fetch(\"POST https://api.cloudinary.com/v1_1/anubhavcloudinary/image/upload\", {\n        method: \"post\",\n        body: data\n      });\n      const parsed = await res.json();\n      console.log(parsed);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btn\",\n            onClick: () => {\n              postdata();\n            },\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: event => {\n            loadfile(event);\n            setimage(event.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"output\",\n          src: preview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prof-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://images.pexels.com/photos/15422042/pexels-photo-15422042/free-photo-of-black-and-white-fashion-man-people.jpeg?auto=compress&cs=tinysrgb&w=800\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"anubhav_04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Enter a suitable caption...\",\n            value: body,\n            onChange: e => {\n              setBody(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Createpost, \"ACxicchAusDnB9YxIupnlI/Ed/c=\");\n_c = Createpost;\nexport default Createpost;\nvar _c;\n$RefreshReg$(_c, \"Createpost\");","map":{"version":3,"names":["React","useState","Navbar","preview","jsxDEV","_jsxDEV","Fragment","_Fragment","Createpost","_s","image","setimage","body","setBody","loadfile","event","output","document","getElementById","src","URL","createObjectURL","target","files","onload","revokeObjectURL","postdata","data","FormData","append","res","fetch","method","parsed","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onClick","type","accept","onChange","alt","style","width","placeholder","value","e","_c","$RefreshReg$"],"sources":["/Users/anubhavgoel/My Folder/01_My Programs/WebDev/Learning React/instagram-clone/src/components/Createpost.js"],"sourcesContent":["import React ,{useState} from \"react\";\nimport Navbar from \"./NavBar\";\nimport preview from \"../img/preview.png\";\nimport \"./Createpost.css\";\n\nconst Createpost = () => {\n  const [image, setimage] = useState(\"\")\n  const [body, setBody] = useState(\"\")\n\n  const loadfile = (event) => {\n    var output = document.getElementById(\"output\");\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n\n    const postdata = async ()=>{\n      const data = new FormData();\n      data.append(\"file\",image);\n      data.append(\"upload_preset\",\"instagram-clone\");\n      data.append(\"cloud_name\",\"anubhavcloudinary\");\n      const res = await fetch(\"POST https://api.cloudinary.com/v1_1/anubhavcloudinary/image/upload\",{\n        method:\"post\",\n        body:data\n      })\n      const parsed =await res.json();\n      console.log(parsed);\n    }\n  };\n  return (\n    <>\n      <Navbar />\n      <div className=\"post\">\n        <div className=\"post-header\">\n          <h3>Create Post</h3>\n          <div className=\"post-btn\">\n            <button id=\"btn\" onClick={()=>{postdata()}}>Post</button>\n          </div>\n        </div>\n        <div className=\"post-input\">\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(event) => {\n              loadfile(event);\n              setimage(event.target.files[0])\n            }}\n          />\n          <img id=\"output\" src={preview} />\n        </div>\n        <div className=\"details\">\n          <div className=\"prof-pic\">\n            <img\n              src=\"https://images.pexels.com/photos/15422042/pexels-photo-15422042/free-photo-of-black-and-white-fashion-man-people.jpeg?auto=compress&cs=tinysrgb&w=800\"\n              alt=\"\"\n            />\n          </div>\n          <div style={{width:\"100%\"}}>\n          <h4>anubhav_04</h4>\n          <textarea placeholder=\"Enter a suitable caption...\" value={body} onChange={(e)=>{setBody(e.target.value)}}></textarea>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Createpost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}